syntax = "proto3";
package tendermint.version;

option go_package = "github.com/YunweiMao/tendermint/proto/tendermint/version";

//We need several .proto files
//According to the following analysis we need:
//  gogoproto/gogo.proto
//  google/protobuf/timestamp.proto
//The paths are
// $GOPATH/pkg/mod/github.com/gogo/protobuf@v1.3.2/
// . (we compile the .proto file at tendermint project proto/ subfolder)
// The final command we use to compile .pb.go file is
// protoc --proto_path=./:$GOPATH/pkg/mod/github.com/gogo/protobuf@v1.3.2/ --go_out=./tendermint/version/ ./tendermint/version/types.proto
// (SEEMS we do not need inlcude $GOPATH/pkg/mod/github.com/gogo/protobuf@v1.3.2/protobuf/ path)
import "gogoproto/gogo.proto";

// App includes the protocol and software version for the application.
// This information is included in ResponseInfo. The App.Protocol can be
// updated in ResponseEndBlock.
message App {
  uint64 protocol = 1;
  string software = 2;
}

// Consensus captures the consensus rules for processing a block in the blockchain,
// including all blockchain data structures and the rules of the application's
// state transition machine.
message Consensus {
  option (gogoproto.equal) = true;

  uint64 block = 1;
  uint64 app   = 2;
}
